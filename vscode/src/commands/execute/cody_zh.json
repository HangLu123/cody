{
  "note": "用于构建命令菜单并跟踪默认情况下可用的Cody命令。",
  "commands_zh": {
    "doc": {
      "description": "生成代码文档",
      "prompt": "为选定的代码编写简洁的文档注释。如果在选定文件或其他相同文件扩展名的文件中已有文档注释，请参考这些现有的注释。注意选定代码的范围（例如导出的函数/API与函数内部的实现细节），并使用适合该范围的惯用风格。仅生成选定代码的文档，不要生成代码。不要包含任何其他代码或注释，只包含选定代码的文档。",
      "context": {
        "currentFile": true,
        "selection": true
      },
      "mode": "insert",
      "type": "default"
    },
    "explain": {
      "description": "解释代码",
      "prompt": "用简单的术语解释所选代码的作用。假设读者是刚学习语言特性和基本语法的初学者。重点解释：1）代码的目的 2）它接受的输入 3）它产生的输出 4）它如何通过逻辑和算法实现其目的 5）任何重要的逻辑流或数据转换。使用初学者能够理解的简单语言。包括足够的细节，以全面描述代码的目标，而不过于技术性。用连贯的段落格式化解释，使用正确的标点符号和语法。解释时假设对代码没有事先了解。不要对未显示在共享代码中的变量或函数做出假设。以解释的代码名称开头。",
      "context": {
        "currentFile": true
      },
      "type": "default"
    },
    "test": {
      "description": "生成单元测试",
      "prompt": "Review the shared context to identify the testing framework and libraries in use. Then, generate a suite of multiple unit tests for the selected function using the detected test framework and libraries. Be sure to import the function being tested. Use the same patterns, testing framework, conventions, and libraries as shown in the shared context. Only import modules, functions, dependencies, and mocks based on shared code. If a test suite for the selected code is in the shared context, focus on generating new tests for uncovered cases. If none are detected, import common unit test libraries for {languageName}. Focus on validating key functionality with simple and complete assertions. Before writing the tests, identify which testing libraries and frameworks to use and import. At the end, enclose the fully completed code for the new unit tests without any comments, fragments, or TODOs, do not give any documentations surrounding. The new tests should validate the expected functionality and cover edge cases for with all required imports, including the function being tested. Do not repeat tests from the shared context. Enclose only the complete runnable tests.Just give me the code, don't give me any description, and no markdown format!!!",
      "context": {
        "currentDir": true,
        "currentFile": true,
        "selection": true
      },
      "type": "default"
    },
    "smell": {
      "description": "发现代码问题",
      "prompt": "请审查并分析选定代码，识别与代码异味、可读性、可维护性、性能、安全性等相关的潜在改进点。不要列出给定代码中已经解决的问题。专注于提供最多5个建设性的建议，这些建议可以使代码更加健壮、高效或符合最佳实践。对于每个建议，简要解释其潜在的好处。在列出建议后，总结是否发现显著的机会来整体提升代码质量，或代码是否通常遵循良好的设计原则。如果未发现问题，请回复'没有错误'。",
      "type": "default"
    }
  }
}
